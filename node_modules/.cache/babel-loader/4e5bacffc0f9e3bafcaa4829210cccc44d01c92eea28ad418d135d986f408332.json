{"ast":null,"code":"function getCookie(key) {\n  if (!key) {\n    return;\n  }\n\n  // To prevent the for loop in the first place assign an empty array\n  // in case there are no cookies at all.\n  var cookies = globalThis.document.cookie ? globalThis.document.cookie.split(\"; \") : [];\n  var jar = {};\n  for (var i = 0; i < cookies.length; i++) {\n    var parts = cookies[i].split(\"=\");\n    var value = parts.slice(1).join(\"=\");\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    try {\n      var foundKey = parts[0].replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n      jar[foundKey] = value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n      if (key === foundKey) {\n        break;\n      }\n    } catch (e) {}\n  }\n  return key ? jar[key] : jar;\n}\nfunction detectFromCookie(key) {\n  return getCookie(key);\n}\nfunction detectFromPath(localePathIndex) {\n  var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis.location;\n  var locale = location.pathname.match(/\\/([a-zA-Z-]*)/g);\n  if (Array.isArray(locale)) {\n    return locale[localePathIndex].replace(\"/\", \"\");\n  }\n  return null;\n}\nfunction detectFromStorage(key) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    useSessionStorage: false\n  };\n  if (options.useSessionStorage) {\n    return globalThis.sessionStorage.getItem(key);\n  }\n  return globalThis.localStorage.getItem(key);\n}\nfunction detectFromNavigator() {\n  var navigator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : globalThis.navigator;\n  var result = navigator.language || navigator.userLanguage;\n  return result;\n}\nfunction detectFromSubdomain(localeSubdomainIndex) {\n  var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis.location;\n  var locale = location.href.match(/(?:http[s]*\\:\\/\\/)*(.*?)\\.(?=[^\\/]*\\..{2,5})/gi);\n  if (Array.isArray(locale)) {\n    return locale[localeSubdomainIndex].replace(\"http://\", \"\").replace(\"https://\", \"\").replace(\".\", \"\");\n  }\n  return null;\n}\nfunction detectHtmlTag(htmlTagIdentifier) {\n  var document = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis.document;\n  if (htmlTagIdentifier) {\n    return document.documentElement.getAttribute(htmlTagIdentifier);\n  }\n  return null;\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n */\nfunction parse(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g;\n  var result = {};\n  var part;\n  while (part = parser.exec(query)) {\n    var key = decode(part[1]);\n    var value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n  return result;\n}\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, \" \"));\n  } catch (e) {\n    return null;\n  }\n}\nfunction detectFromUrl(parameter) {\n  var location = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis.location;\n  if (!parameter) throw new Error(\"fromUrl parameter is required\");\n  var result = parse(location.search)[parameter] || null;\n  return result;\n}\nfunction detect() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  for (var i = 0; i < args.length; i++) {\n    var res = typeof args[i] === \"function\" ? args[i]() : args[i];\n    if (res) return res;\n  }\n  return null;\n}\nfunction multipleDetect() {\n  var locales = [];\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  for (var i = 0; i < args.length; i++) {\n    var res = typeof args[i] === \"function\" ? args[i]() : args[i];\n    if (res) locales.push(res);\n  }\n  return locales;\n}\nexport { detect, detectFromCookie as fromCookie, detectHtmlTag as fromHtmlTag, detectFromNavigator as fromNavigator, detectFromPath as fromPath, detectFromStorage as fromStorage, detectFromSubdomain as fromSubdomain, detectFromUrl as fromUrl, multipleDetect };","map":{"version":3,"names":["getCookie","key","cookies","globalThis","document","cookie","split","jar","i","length","parts","value","slice","join","foundKey","replace","decodeURIComponent","e","detectFromCookie","detectFromPath","localePathIndex","location","arguments","undefined","locale","pathname","match","Array","isArray","detectFromStorage","options","useSessionStorage","sessionStorage","getItem","localStorage","detectFromNavigator","navigator","result","language","userLanguage","detectFromSubdomain","localeSubdomainIndex","href","detectHtmlTag","htmlTagIdentifier","documentElement","getAttribute","parse","query","parser","part","exec","decode","input","detectFromUrl","parameter","Error","search","detect","_len","args","_key","res","multipleDetect","locales","_len2","_key2","push"],"sources":["/Users/kayraczerniewicz/Code/Lingui-LastVersion/node_modules/@lingui/detect-locale/src/utils/cookie-getter.ts","/Users/kayraczerniewicz/Code/Lingui-LastVersion/node_modules/@lingui/detect-locale/src/detectors/fromCookie.ts","/Users/kayraczerniewicz/Code/Lingui-LastVersion/node_modules/@lingui/detect-locale/src/detectors/fromPath.ts","/Users/kayraczerniewicz/Code/Lingui-LastVersion/node_modules/@lingui/detect-locale/src/detectors/fromStorage.ts","/Users/kayraczerniewicz/Code/Lingui-LastVersion/node_modules/@lingui/detect-locale/src/detectors/fromNavigator.ts","/Users/kayraczerniewicz/Code/Lingui-LastVersion/node_modules/@lingui/detect-locale/src/detectors/fromSubdomain.ts","/Users/kayraczerniewicz/Code/Lingui-LastVersion/node_modules/@lingui/detect-locale/src/detectors/fromHtmlTag.ts","/Users/kayraczerniewicz/Code/Lingui-LastVersion/node_modules/@lingui/detect-locale/src/utils/query-string.ts","/Users/kayraczerniewicz/Code/Lingui-LastVersion/node_modules/@lingui/detect-locale/src/detectors/fromUrl.ts","/Users/kayraczerniewicz/Code/Lingui-LastVersion/node_modules/@lingui/detect-locale/src/index.ts"],"sourcesContent":["export function getCookie(key: string): string {\n  if (!key) {\n    return\n  }\n\n  // To prevent the for loop in the first place assign an empty array\n  // in case there are no cookies at all.\n  const cookies = globalThis.document.cookie\n    ? globalThis.document.cookie.split(\"; \")\n    : []\n  const jar = {}\n  for (let i = 0; i < cookies.length; i++) {\n    const parts = cookies[i].split(\"=\")\n    let value = parts.slice(1).join(\"=\")\n\n    if (value[0] === '\"') {\n      value = value.slice(1, -1)\n    }\n\n    try {\n      const foundKey = parts[0].replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n      jar[foundKey] = value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n\n      if (key === foundKey) {\n        break\n      }\n    } catch (e) {}\n  }\n\n  return key ? jar[key] : jar\n}\n","import { LocaleString } from \"..\"\nimport { getCookie } from \"../utils/cookie-getter\"\n\nexport default function detectFromCookie(key: string): LocaleString {\n  return getCookie(key)\n}\n","import { LocaleString } from \"../\"\n\nexport default function detectFromPath(\n  localePathIndex: number,\n  location: Partial<Location> = globalThis.location\n): LocaleString {\n  const locale: RegExpMatchArray = location.pathname.match(/\\/([a-zA-Z-]*)/g)\n  if (Array.isArray(locale)) {\n    return locale[localePathIndex].replace(\"/\", \"\")\n  }\n\n  return null\n}\n","import { LocaleString } from \"..\"\n\nexport default function detectFromStorage(\n  key: string,\n  options: { useSessionStorage: boolean } = { useSessionStorage: false }\n): LocaleString {\n  if (options.useSessionStorage) {\n    return globalThis.sessionStorage.getItem(key)\n  }\n\n  return globalThis.localStorage.getItem(key)\n}\n","import { LocaleString } from \"..\"\n\ntype IE11NavigatorLanguage = {\n  userLanguage?: string\n}\n\nexport default function detectFromNavigator(\n  navigator: Partial<Navigator & IE11NavigatorLanguage> = globalThis.navigator\n): LocaleString {\n  const result: LocaleString = navigator.language || navigator.userLanguage\n  return result\n}\n","import { LocaleString } from \"../\"\n\nexport default function detectFromSubdomain(\n  localeSubdomainIndex: number,\n  location: Partial<Location> = globalThis.location\n): LocaleString {\n  const locale: RegExpMatchArray = location.href.match(\n    /(?:http[s]*\\:\\/\\/)*(.*?)\\.(?=[^\\/]*\\..{2,5})/gi\n  )\n  if (Array.isArray(locale)) {\n    return locale[localeSubdomainIndex]\n      .replace(\"http://\", \"\")\n      .replace(\"https://\", \"\")\n      .replace(\".\", \"\")\n  }\n\n  return null\n}\n","import { LocaleString } from \"..\"\n\nexport default function detectHtmlTag(\n  htmlTagIdentifier: string,\n  document: Partial<Document> = globalThis.document\n): LocaleString {\n  if (htmlTagIdentifier) {\n    return document.documentElement.getAttribute(htmlTagIdentifier)\n  }\n\n  return null\n}\n","/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n */\nexport function parse(query) {\n  const parser = /([^=?#&]+)=?([^&]*)/g\n  const result = {}\n  let part\n\n  while ((part = parser.exec(query))) {\n    const key = decode(part[1])\n    const value = decode(part[2])\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue\n    result[key] = value\n  }\n\n  return result\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, \" \"))\n  } catch (e) {\n    return null\n  }\n}\n","import { parse } from \"../utils/query-string\"\nimport { LocaleString } from \"..\"\n\nexport default function detectFromUrl(\n  parameter: string,\n  location: Partial<Location> = globalThis.location\n): LocaleString {\n  if (!parameter) throw new Error(\"fromUrl parameter is required\")\n\n  const result: LocaleString = parse(location.search)[parameter] || null\n  return result\n}\n","import \"./utils/globalThis.polyfill.js\"\nimport fromCookie from \"./detectors/fromCookie\"\nimport fromPath from \"./detectors/fromPath\"\nimport fromStorage from \"./detectors/fromStorage\"\nimport fromNavigator from \"./detectors/fromNavigator\"\nimport fromSubdomain from \"./detectors/fromSubdomain\"\nimport fromHtmlTag from \"./detectors/fromHtmlTag\"\nimport fromUrl from \"./detectors/fromUrl\"\n\nexport type LocaleString = string\nexport type DetectParamsFunctions = string\n\nfunction detect(...args): LocaleString | null {\n  for (let i = 0; i < args.length; i++) {\n    const res: LocaleString =\n      typeof args[i] === \"function\" ? args[i]() : args[i]\n    if (res) return res\n  }\n\n  return null\n}\n\nfunction multipleDetect(...args): LocaleString[] {\n  const locales = []\n  for (let i = 0; i < args.length; i++) {\n    const res: LocaleString =\n      typeof args[i] === \"function\" ? args[i]() : args[i]\n    if (res) locales.push(res)\n  }\n\n  return locales\n}\n\nexport {\n  detect,\n  multipleDetect,\n  fromCookie,\n  fromHtmlTag,\n  fromNavigator,\n  fromPath,\n  fromStorage,\n  fromSubdomain,\n  fromUrl,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}