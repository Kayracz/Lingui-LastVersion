{"ast":null,"code":"import { i18n } from \"@lingui/core\";\nimport { detect, fromStorage, fromNavigator } from \"@lingui/detect-locale\";\nimport { en, es, fr } from \"make-plural/plurals\";\ni18n.loadLocaleData({\n  en: {\n    plurals: en\n  },\n  es: {\n    plurals: es\n  },\n  fr: {\n    plurals: fr\n  }\n});\nconst LOCAL_STORAGE_KEY = \"lang\";\n\n// defines where the locale falls back to (passed to dynamicActivate)\nexport const DEFAULT_LOCALE = \"en\";\nexport function getLocale() {\n  const detectedLocale = detect(fromStorage(LOCAL_STORAGE_KEY), fromNavigator(),\n  // from system settings\n  DEFAULT_LOCALE);\n  return detectedLocale;\n}\n\n/**\n * Load messages for requested locale and activate it.\n */\nexport async function dynamicActivate(locale) {\n  try {\n    const module = await import(`./locales/${locale}/messages`);\n    i18n.load(locale, module.messages);\n    i18n.activate(locale);\n\n    // saves the language to the localStorage\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, locale);\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"names":["i18n","detect","fromStorage","fromNavigator","en","es","fr","loadLocaleData","plurals","LOCAL_STORAGE_KEY","DEFAULT_LOCALE","getLocale","detectedLocale","dynamicActivate","locale","module","load","messages","activate","window","localStorage","setItem","error","console","log"],"sources":["/Users/kayraczerniewicz/Code/Lingui-LastVersion/src/i18n.js"],"sourcesContent":["import { i18n } from \"@lingui/core\";\nimport { detect, fromStorage, fromNavigator } from \"@lingui/detect-locale\";\nimport { en, es, fr } from \"make-plural/plurals\";\n\ni18n.loadLocaleData({\n\ten: { plurals: en },\n\tes: { plurals: es },\n\tfr: { plurals: fr },\n});\n\nconst LOCAL_STORAGE_KEY = \"lang\";\n\n// defines where the locale falls back to (passed to dynamicActivate)\nexport const DEFAULT_LOCALE = \"en\";\n\nexport function getLocale() {\n\tconst detectedLocale = detect(\n\t\tfromStorage(LOCAL_STORAGE_KEY),\n\t\tfromNavigator(), // from system settings\n\t\tDEFAULT_LOCALE\n\t);\n\treturn detectedLocale;\n}\n\n/**\n * Load messages for requested locale and activate it.\n */\nexport async function dynamicActivate(locale) {\n\ttry {\n\t\tconst module = await import(`./locales/${locale}/messages`);\n\n\t\ti18n.load(locale, module.messages);\n\t\ti18n.activate(locale);\n\n\t\t// saves the language to the localStorage\n\t\twindow.localStorage.setItem(LOCAL_STORAGE_KEY, locale);\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,cAAc;AACnC,SAASC,MAAM,EAAEC,WAAW,EAAEC,aAAa,QAAQ,uBAAuB;AAC1E,SAASC,EAAE,EAAEC,EAAE,EAAEC,EAAE,QAAQ,qBAAqB;AAEhDN,IAAI,CAACO,cAAc,CAAC;EACnBH,EAAE,EAAE;IAAEI,OAAO,EAAEJ;EAAG,CAAC;EACnBC,EAAE,EAAE;IAAEG,OAAO,EAAEH;EAAG,CAAC;EACnBC,EAAE,EAAE;IAAEE,OAAO,EAAEF;EAAG;AACnB,CAAC,CAAC;AAEF,MAAMG,iBAAiB,GAAG,MAAM;;AAEhC;AACA,OAAO,MAAMC,cAAc,GAAG,IAAI;AAElC,OAAO,SAASC,SAASA,CAAA,EAAG;EAC3B,MAAMC,cAAc,GAAGX,MAAM,CAC5BC,WAAW,CAACO,iBAAiB,CAAC,EAC9BN,aAAa,CAAC,CAAC;EAAE;EACjBO,cACD,CAAC;EACD,OAAOE,cAAc;AACtB;;AAEA;AACA;AACA;AACA,OAAO,eAAeC,eAAeA,CAACC,MAAM,EAAE;EAC7C,IAAI;IACH,MAAMC,MAAM,GAAG,MAAM,MAAM,CAAE,aAAYD,MAAO,WAAU,CAAC;IAE3Dd,IAAI,CAACgB,IAAI,CAACF,MAAM,EAAEC,MAAM,CAACE,QAAQ,CAAC;IAClCjB,IAAI,CAACkB,QAAQ,CAACJ,MAAM,CAAC;;IAErB;IACAK,MAAM,CAACC,YAAY,CAACC,OAAO,CAACZ,iBAAiB,EAAEK,MAAM,CAAC;EACvD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACnB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}