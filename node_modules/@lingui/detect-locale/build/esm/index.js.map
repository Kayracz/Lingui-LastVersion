{"version":3,"file":"index.js","sources":["../../src/utils/cookie-getter.ts","../../src/detectors/fromCookie.ts","../../src/detectors/fromPath.ts","../../src/detectors/fromStorage.ts","../../src/detectors/fromNavigator.ts","../../src/detectors/fromSubdomain.ts","../../src/detectors/fromHtmlTag.ts","../../src/utils/query-string.ts","../../src/detectors/fromUrl.ts","../../src/index.ts"],"sourcesContent":["export function getCookie(key: string): string {\n  if (!key) {\n    return\n  }\n\n  // To prevent the for loop in the first place assign an empty array\n  // in case there are no cookies at all.\n  const cookies = globalThis.document.cookie\n    ? globalThis.document.cookie.split(\"; \")\n    : []\n  const jar = {}\n  for (let i = 0; i < cookies.length; i++) {\n    const parts = cookies[i].split(\"=\")\n    let value = parts.slice(1).join(\"=\")\n\n    if (value[0] === '\"') {\n      value = value.slice(1, -1)\n    }\n\n    try {\n      const foundKey = parts[0].replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n      jar[foundKey] = value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n\n      if (key === foundKey) {\n        break\n      }\n    } catch (e) {}\n  }\n\n  return key ? jar[key] : jar\n}\n","import { LocaleString } from \"..\"\nimport { getCookie } from \"../utils/cookie-getter\"\n\nexport default function detectFromCookie(key: string): LocaleString {\n  return getCookie(key)\n}\n","import { LocaleString } from \"../\"\n\nexport default function detectFromPath(\n  localePathIndex: number,\n  location: Partial<Location> = globalThis.location\n): LocaleString {\n  const locale: RegExpMatchArray = location.pathname.match(/\\/([a-zA-Z-]*)/g)\n  if (Array.isArray(locale)) {\n    return locale[localePathIndex].replace(\"/\", \"\")\n  }\n\n  return null\n}\n","import { LocaleString } from \"..\"\n\nexport default function detectFromStorage(\n  key: string,\n  options: { useSessionStorage: boolean } = { useSessionStorage: false }\n): LocaleString {\n  if (options.useSessionStorage) {\n    return globalThis.sessionStorage.getItem(key)\n  }\n\n  return globalThis.localStorage.getItem(key)\n}\n","import { LocaleString } from \"..\"\n\ntype IE11NavigatorLanguage = {\n  userLanguage?: string\n}\n\nexport default function detectFromNavigator(\n  navigator: Partial<Navigator & IE11NavigatorLanguage> = globalThis.navigator\n): LocaleString {\n  const result: LocaleString = navigator.language || navigator.userLanguage\n  return result\n}\n","import { LocaleString } from \"../\"\n\nexport default function detectFromSubdomain(\n  localeSubdomainIndex: number,\n  location: Partial<Location> = globalThis.location\n): LocaleString {\n  const locale: RegExpMatchArray = location.href.match(\n    /(?:http[s]*\\:\\/\\/)*(.*?)\\.(?=[^\\/]*\\..{2,5})/gi\n  )\n  if (Array.isArray(locale)) {\n    return locale[localeSubdomainIndex]\n      .replace(\"http://\", \"\")\n      .replace(\"https://\", \"\")\n      .replace(\".\", \"\")\n  }\n\n  return null\n}\n","import { LocaleString } from \"..\"\n\nexport default function detectHtmlTag(\n  htmlTagIdentifier: string,\n  document: Partial<Document> = globalThis.document\n): LocaleString {\n  if (htmlTagIdentifier) {\n    return document.documentElement.getAttribute(htmlTagIdentifier)\n  }\n\n  return null\n}\n","/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n */\nexport function parse(query) {\n  const parser = /([^=?#&]+)=?([^&]*)/g\n  const result = {}\n  let part\n\n  while ((part = parser.exec(query))) {\n    const key = decode(part[1])\n    const value = decode(part[2])\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue\n    result[key] = value\n  }\n\n  return result\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, \" \"))\n  } catch (e) {\n    return null\n  }\n}\n","import { parse } from \"../utils/query-string\"\nimport { LocaleString } from \"..\"\n\nexport default function detectFromUrl(\n  parameter: string,\n  location: Partial<Location> = globalThis.location\n): LocaleString {\n  if (!parameter) throw new Error(\"fromUrl parameter is required\")\n\n  const result: LocaleString = parse(location.search)[parameter] || null\n  return result\n}\n","import \"./utils/globalThis.polyfill.js\"\nimport fromCookie from \"./detectors/fromCookie\"\nimport fromPath from \"./detectors/fromPath\"\nimport fromStorage from \"./detectors/fromStorage\"\nimport fromNavigator from \"./detectors/fromNavigator\"\nimport fromSubdomain from \"./detectors/fromSubdomain\"\nimport fromHtmlTag from \"./detectors/fromHtmlTag\"\nimport fromUrl from \"./detectors/fromUrl\"\n\nexport type LocaleString = string\nexport type DetectParamsFunctions = string\n\nfunction detect(...args): LocaleString | null {\n  for (let i = 0; i < args.length; i++) {\n    const res: LocaleString =\n      typeof args[i] === \"function\" ? args[i]() : args[i]\n    if (res) return res\n  }\n\n  return null\n}\n\nfunction multipleDetect(...args): LocaleString[] {\n  const locales = []\n  for (let i = 0; i < args.length; i++) {\n    const res: LocaleString =\n      typeof args[i] === \"function\" ? args[i]() : args[i]\n    if (res) locales.push(res)\n  }\n\n  return locales\n}\n\nexport {\n  detect,\n  multipleDetect,\n  fromCookie,\n  fromHtmlTag,\n  fromNavigator,\n  fromPath,\n  fromStorage,\n  fromSubdomain,\n  fromUrl,\n}\n"],"names":["getCookie","key","cookies","globalThis","document","cookie","split","jar","i","length","parts","value","slice","join","foundKey","replace","decodeURIComponent","e","detectFromCookie","detectFromPath","localePathIndex","location","locale","pathname","match","Array","isArray","detectFromStorage","options","useSessionStorage","sessionStorage","getItem","localStorage","detectFromNavigator","navigator","result","language","userLanguage","detectFromSubdomain","localeSubdomainIndex","href","detectHtmlTag","htmlTagIdentifier","documentElement","getAttribute","parse","query","parser","part","exec","decode","input","detectFromUrl","parameter","Error","search","detect","args","res","multipleDetect","locales","push"],"mappings":"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"}